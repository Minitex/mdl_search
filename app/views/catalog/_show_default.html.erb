<%
  borealis_doc = MDL::BorealisDocument.new(document: document)
  config = []
  config << MDL::CiteDetails.new(solr_doc: document).to_hash
  config << MDL::CiteCitation.new(solr_doc: document, base_url: request.base_url).to_hash
  config << MDL::CiteDownload.new(assets: borealis_doc.assets).to_hash
  config << MDL::CiteDownloadArchive.new(
    ready_url: ready_archive_download_request_path(document['id']),
    download_request_url: archive_download_requests_path,
    item_id: document['id']
  ).to_hash
  config << MDL::CiteTranscript.new(solr_doc: document).to_hash
  config = config.map(&:presence).compact
%>

<div class="metadata" data-metadata='<%= document_metadata(document).to_json %>'></div>

<%= content_tag :div,
  id: "viewer_data",
  citationConfig: config.to_json do %>
<% end %>

<div class="row">
  <div class="col-md-12">
    <div id="uv" class="uv" style="height: 768px;"></div>
  </div>
</div>

<div class="row">
  <div class="col-md-9">
    <%= render 'rights_statement', config: MDL::RightsConfig.new(url: document['rights_uri_ssi']) %>
    <div id="react-citation-viewer" ></div>
  </div>
  <div class="col-md-3">
    <div id="sidebar">
       <%= render_document_sidebar_partial %>
    </div>
  </div>
</div>

<%= render partial: 'map_view',
  locals: {
    coordinates: @document['coordinates_llsi'],
    map_id: 'full_record_map',
    with_popup: true
  }
%>

<% content_for(:head) do %>
  <link rel="stylesheet" href="/uv/uv.css">
  <%= javascript_pack_tag 'universalviewer' %>
<% end %>

<% content_for(:webpack_bundles) do %>
  <%= javascript_pack_tag 'drawMap' %>
  <%= javascript_pack_tag 'citation' %>
<% end %>

<% content_for(:blocking_javascript) do %>
  <script type="text/javascript">
    window.addEventListener('uvLoaded', function (e) {
      const urlDataProvider = new UV.URLDataProvider();
      const collectionIndex = urlDataProvider.get('c');

      // If we were given a legacy anchor, such as #/image/4, parse
      // out the 4 and use it as the canvasIndex in the UV config.
      const legacyAnchorMatch = /\/image\/(\d+)$/.exec(window.location.hash) || [0];
      let canvasIndexFallback = legacyAnchorMatch.pop();
      if (legacyAnchorMatch.length) {
        window.location.hash = '';
      }

      createUV('#uv', {
        iiifResourceUri: '<%= borealis_doc.manifest_url %>',
        root: '../../../uv/',
        configUri: '/uv/config.json',
        collectionIndex: (collectionIndex !== undefined) ? Number(collectionIndex) : undefined,
        manifestIndex: Number(urlDataProvider.get('m', 0)),
        sequenceIndex: Number(urlDataProvider.get('s', 0)),
        canvasIndex: Number(urlDataProvider.get('cv', canvasIndexFallback)),
        rotation: Number(urlDataProvider.get('r', 0)),
        rangeId: urlDataProvider.get('rid', ''),
        xywh: urlDataProvider.get('xywh', '')
      }, urlDataProvider);

      $(document).on('click', 'button.download', function () {
        // We don't want to offer the full-size image download option
        $('#wholeImageHighRes, #wholeImageHighReslabel').remove();
      })
    }, false);
  </script>
  <%= javascript_pack_tag 'universalviewer_lib' %>
<% end %>
